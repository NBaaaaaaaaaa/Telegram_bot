import telebot
from telebot import types
import time
from bot_functions import *
from logger import logging
from TOKEN import TOKEN
from work_db import add_delete_user, user_in_db, add_chat_id_db, get_dict_username_id, add_delete_service


bot = telebot.TeleBot(TOKEN)


# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–ø–∏—Å–∏ id —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª.
def writing_message_id(message):
    with open("all_messages/{chat_id}".format(chat_id=message.chat.id), "a+") as file:
        file.write(str(message.message_id) + ";")


# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–µ—Ä–µ–ø–∏—Å–∫–∏ —Å –±–æ—Ç–æ–º.
def delete_all_messages(chat_id):
    with open("all_messages/{chat_id}".format(chat_id=chat_id), "r+") as file:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ id —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ.
        list_messages_id = list(map(int, file.read().split(";")[:-1]))
        min_id, max_id = min(list_messages_id), max(list_messages_id)

        for message_id in range(min_id, max_id + 3):
            try:
                bot.delete_message(chat_id, message_id)
            except Exception as e:
                print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å id: {mes_id}".format(mes_id=message_id))

        # –û—á–∏—â–∞–µ–º —Ñ–∞–π–ª.
        open("all_messages/{chat_id}".format(chat_id=chat_id), "w")


# –§—É–Ω–∫—Ü–∏—è –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ id —á–∞—Ç–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–æ–≥–æ–≤.
def get_username(chat_id):
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å {"–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": "id —á–∞—Ç–∞", ...}.
    dict_file = get_dict_username_id()

    for username in dict_file:
        try:
            if int(dict_file[username]) == chat_id:
                return username
        except ValueError:
            print("{n} –Ω–µ –∏–º–µ–µ—Ç id —á–∞—Ç–∞.".format(n=username))


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
def send_start_message(mod, chat_id):
    dict_text = {"start": "–ü—Ä–∏–≤–µ—Ç.\n" +
                          "–ë–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç—å, –∑–ø—É—Å–∫–∞—Ç—å –∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.\n" +
                          "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏.",
                 "restart": "–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω.\n" +
                            "–î–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏.",
                 "after_admin": "–†–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."}

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–Ω–æ–ø–æ–∫.
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫.
    markup.add(
        types.KeyboardButton("üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
        types.KeyboardButton("üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç"),
        types.KeyboardButton("üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª—É–∂–±—ã"),
        types.KeyboardButton("üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—ã"),
        types.KeyboardButton("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞"),
        types.KeyboardButton("ü´Ö –ê–¥–º–∏–Ω")
    )

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
    logging("dhadhfabot", dict_text[mod].replace("\n", " "))

    # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∫–Ω–æ–ø–æ–∫.
    bot.send_message(chat_id, dict_text[mod], reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
def send_message_after_restart():
    # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å {"–∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": "id —á–∞—Ç–∞", ...}.
    dict_file = get_dict_username_id()

    for username in dict_file:
        try:
            send_start_message("restart", int(dict_file[username]))
        except TypeError:
            print("{n} –Ω–µ –ø–æ–ª—É—á–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ—Å—Ç–∞—Ä—Ç–µ, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—Ç id —á–∞—Ç–∞.".format(n=username))


# –§—É–Ω–∫—Ü–∏—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º.
@bot.message_handler(commands=['start'])
def start(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    if user_in_db(message):
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
        logging(message.from_user.username, message.text)
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º id —á–∞—Ç–∞ –≤ —Ñ–∞–π–ª.
        add_chat_id_db(message)
        # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–≤–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.
        send_start_message("start", message.chat.id)
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è.
        writing_message_id(message)


# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
@bot.message_handler(commands=['addUser'])
def add_command(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    if user_in_db(message):
        try:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging(message.from_user.username, message.text)
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–¥.
            add_delete_user("add", message.text.split(" ", 1)[1].replace(" ", ""))

        except IndexError:
            print("–ù–µ–≤–µ—Ä–Ω–æ –≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /addUser: {c}".format(c=message.text))


# –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–ª—É–∂–±—ã.
@bot.message_handler(commands=['addService'])
def add_command(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    if user_in_db(message):
        try:
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging(message.from_user.username, message.text)
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º id —á–∞—Ç–∞ –≤ —Ñ–∞–π–ª.
            add_delete_service("add", message.text.split(" ", 1)[1])

        except IndexError:
            print("–ù–µ–≤–µ—Ä–Ω–æ –≤–µ–¥–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /addService: {c}".format(c=message.text))


# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞. –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
def get_status():
    global status
    return status


# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö —Å–ª—É–∂–± –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–Ω–æ–ø–æ–∫.
def output_button_service_stat(message):
    dict_services = get_data_services()

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
    logging("dhadhfabot", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:")

    markup = types.InlineKeyboardMarkup(row_width=1)
    # –ó–∞–ø–æ–ª—è–µ–º –ø–æ–ª–µ –∫–Ω–æ–ø–∫–∞–º–∏.
    for service in sorted(dict_services.keys()):
        text = "; ".join(
            [service, dict_services[service]["uss"],
             dict_services[service]["status"]])

        markup.add(types.InlineKeyboardButton(text, callback_data=service))

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
        logging("dhadhfabot", text)

    bot.send_message(message.chat.id, "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥:", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –∏–º–µ–Ω —Å–ª—É–∂–± –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–Ω–æ–ø–æ–∫.
def output_button_service(message):
    list_services = get_list_services()

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
    logging("dhadhfabot", "–°–ª—É–∂–±—ã:")

    markup = types.InlineKeyboardMarkup(row_width=1)
    # –ó–∞–ø–æ–ª—è–µ–º –ø–æ–ª–µ –∫–Ω–æ–ø–∫–∞–º–∏.
    for service in sorted(list_services):
        text = service

        markup.add(types.InlineKeyboardButton(text, callback_data="list_{s}".format(s=service)))

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
        logging("dhadhfabot", text)

    bot.send_message(message.chat.id, "–°–ª—É–∂–±—ã:", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∫–Ω–æ–ø–æ–∫.
def output_button_users(message):
    dict_users = get_dict_username_id()

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
    logging("dhadhfabot", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")

    markup = types.InlineKeyboardMarkup(row_width=1)
    # –ó–∞–ø–æ–ª—è–µ–º –ø–æ–ª–µ –∫–Ω–æ–ø–∫–∞–º–∏.
    for username in sorted(dict_users.keys()):
        markup.add(types.InlineKeyboardButton(username, callback_data=username))

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
        logging("dhadhfabot", username)

    bot.send_message(message.chat.id, "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", reply_markup=markup)


# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∂–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫ —Å–æ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
@bot.callback_query_handler(func=lambda message: True)
def callback_query(call):
    if call.message:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
        if user_in_db(call.message):
            # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è.
            writing_message_id(call.message)

            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å —Å–ª—É–∂–± —Å –∏—Ö –¥–∞–Ω–Ω—ã–º–∏.
            dict_services = get_data_services()
            # –ü–æ–ª—É—á–∞–µ–º —Å–ª–æ–≤–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
            list_users = list(get_dict_username_id())
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏–º–µ–Ω —Å–ª—É–∂–±.
            list_services = get_list_services()

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ inline –∫–Ω–æ–ø–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –¥–∞–Ω–Ω—ã–µ —Å–ª—É–∂–±—ã.
            if call.data in dict_services:
                markup = types.InlineKeyboardMarkup(row_width=1)

                service_name, service_status = call.data, dict_services[call.data]["status"]

                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞.
                text = ""
                # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É–∂–±—ã.
                if service_status != "stopped":
                    text = "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–µ—Ä–≤–∏—Å {name}?".format(name=service_name)

                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–ª—É–∂–±—ã.
                    markup.add(types.InlineKeyboardButton("üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å",
                                                          callback_data="Stop_service:{name}:{mes_id}".
                                                          format(name=service_name, mes_id=call.message.message_id)))

                # –ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã.
                else:
                    text = "–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å {name}?".format(name=service_name)

                    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã.
                    markup.add(types.InlineKeyboardButton("üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å",
                                                          callback_data="Start_service:{name}:{mes_id}".
                                                          format(name=service_name, mes_id=call.message.message_id)))

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥.
                markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="Back"))

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging("dhadhfabot", text)

                # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏.
                bot.send_message(call.message.chat.id, text, reply_markup=markup)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–µ —Å–ª—É–∂–±—ã.
            elif call.data.split(":", 2)[0] == "Stop_service":
                result = on_off_services("off", call.data.split(":", 2)[1])

                # –£–¥–∞–ª—è–µ–º 2 –ø–µ—Ä–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è.
                bot.delete_message(call.message.chat.id, call.data.split(":", 2)[2])
                bot.delete_message(call.message.chat.id, call.message.message_id)

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging(get_username(call.message.chat.id), "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å")
                logging("dhadhfabot", result.replace("\n", " "))

                bot.send_message(call.message.chat.id, result)
                output_button_service_stat(call.message)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –∑–∞–ø—É—Å–∫—É —Å–ª—É–∂–±—ã.
            elif call.data.split(":", 2)[0] == "Start_service":
                result = on_off_services("on", call.data.split(":", 2)[1])

                # –£–¥–∞–ª—è–µ–º 2 –ø–µ—Ä–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è.
                bot.delete_message(call.message.chat.id, call.data.split(":", 2)[2])
                bot.delete_message(call.message.chat.id, call.message.message_id)

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging(get_username(call.message.chat.id), "–ó–∞–ø—É—Å—Ç–∏—Ç—å")
                logging("dhadhfabot", result.replace("\n", " "))

                bot.send_message(call.message.chat.id, result)
                # –ü–∞—É–∑–∞, —á—Ç–æ–±—ã —Å–ª—É–∂–±–∞ —É—Å–ø–µ–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è.
                time.sleep(1)
                output_button_service_stat(call.message)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ –Ω–∞–∂–∞—Ç–∏—é –Ω–∞ inline –∫–Ω–æ–ø–∫–∏, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –∏–º—è —Å–ª—É–∂–±—ã.
            elif call.data in list("list_{s}".format(s=_) for _ in list_services):
                markup = types.InlineKeyboardMarkup(row_width=1)

                service_name = call.data.split("_", 1)[1]
                text = "–£–¥–∞–ª–∏—Ç—å —Å–ª—É–∂–±—É {name}?".format(name=service_name)

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–ª—É–∂–±—ã.
                markup.add(types.InlineKeyboardButton("üî¥ –£–¥–∞–ª–∏—Ç—å",
                                                      callback_data="Delete_service:{name}:{mes_id}".
                                                      format(name=service_name, mes_id=call.message.message_id)))

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥.
                markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="Back"))

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging("dhadhfabot", text)

                # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏.
                bot.send_message(call.message.chat.id, text, reply_markup=markup)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é —Å–ª—É–∂–±—ã.
            elif call.data.split(":", 2)[0] == "Delete_service":
                add_delete_service("delete", call.data.split(":", 2)[1])

                # –£–¥–∞–ª—è–µ–º 2 –ø–µ—Ä–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è.
                bot.delete_message(call.message.chat.id, call.data.split(":", 2)[2])
                bot.delete_message(call.message.chat.id, call.message.message_id)

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging(get_username(call.message.chat.id), "–£–¥–∞–ª–∏—Ç—å")

                output_button_service(call.message)

            # –ï—Å–ª–∏ –±—ã–ª–æ –ø–µ—Ä–µ–¥–∞–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ —Ä–∞–≤–Ω–æ–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            elif call.data in list_users:
                markup = types.InlineKeyboardMarkup(row_width=1)

                text = "–£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {name}?".format(name=call.data)

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
                markup.add(types.InlineKeyboardButton("üßπ –£–¥–∞–ª–∏—Ç—å",
                                                      callback_data="Delete:{name}:{mes_id}".
                                                      format(name=call.data, mes_id=call.message.message_id)))

                # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥.
                markup.add(types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="Back"))

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging("dhadhfabot", text)

                # –í—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏.
                bot.send_message(call.message.chat.id, text, reply_markup=markup)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–æ —É–¥–∞–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
            elif call.data.split(":", 2)[0] == "Delete":
                add_delete_user("delete", call.data.split(":", 2)[1])

                # –£–¥–∞–ª—è–µ–º 2 –ø–µ—Ä–¥—ã–¥—É—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è.
                bot.delete_message(call.message.chat.id, call.data.split(":", 2)[2])
                bot.delete_message(call.message.chat.id, call.message.message_id)

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging(get_username(call.message.chat.id), "–£–¥–∞–ª–∏—Ç—å")

                output_button_users(call.message)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥.
            elif call.data == "Back":
                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging(get_username(call.message.chat.id), "–ù–∞–∑–∞–¥")

                bot.delete_message(call.message.chat.id, call.message.message_id)

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
            elif call.data == "Restart":
                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging(get_username(call.message.chat.id), "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å")

                global status
                # –ú–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–∞ "Restart".
                status = call.data

                # –£–≤–∏—Ä–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã.
                no_buttons = telebot.types.ReplyKeyboardRemove()

                # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
                logging("dhadhfabot", "–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è ...")

                # –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
                bot.delete_message(call.message.chat.id, call.message.message_id)

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ.
                bot.send_message(call.message.chat.id, "–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è ...", reply_markup=no_buttons)
                # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–ø—Ä–æ—Å–∞ Telegram —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
                bot.stop_polling()


# –§—É–Ω–∫—Ü–∏—è, –æ–±—Å–ª—É–∂–∏–≤–∞—é—â–∞—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è.
@bot.message_handler(content_types=["text"])
def buttons_events(message):
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    if user_in_db(message):
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º id —Å–æ–æ–±—â–µ–Ω–∏—è.
        writing_message_id(message)
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
        logging(message.from_user.username, message.text)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥".
        if message.text == "üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥":
            output_button_service_stat(message)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç".
        elif message.text == "üßπ –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç":
            delete_all_messages(message.chat.id)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—ã".
        elif message.text == "üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—ã":
            result = on_off_services("on")

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging("dhadhfabot", result.replace("\n", " "))

            bot.send_message(message.chat.id, result)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª—É–∂–±—ã".
        elif message.text == "üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª—É–∂–±—ã":
            result = on_off_services("off")

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging("dhadhfabot", result.replace("\n", " "))

            bot.send_message(message.chat.id, result)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞".
        elif message.text == "üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞":
            markup = types.InlineKeyboardMarkup(row_width=1)
            markup.add(
                types.InlineKeyboardButton("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å", callback_data="Restart"),
                types.InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data="Back")
            )

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging("dhadhfabot", "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞?")

            bot.send_message(message.chat.id, "–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞?", reply_markup=markup)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "ü´Ö –ê–¥–º–∏–Ω".
        elif message.text == "ü´Ö –ê–¥–º–∏–Ω":
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∫–Ω–æ–ø–æ–∫.
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)

            # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –∫–Ω–æ–ø–æ–∫.
            markup.add(
                types.KeyboardButton("üë® –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"),
                types.KeyboardButton("üìñ C–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"),
                types.KeyboardButton("üü¢ –î–æ–±–∞–≤–∏—Ç—å —Å–ª—É–∂–±—É"),
                types.KeyboardButton("üìñ C–ø–∏—Å–æ–∫ —Å–ª—É–∂–±"),
                types.KeyboardButton("üîô –ù–∞–∑–∞–¥")
            )

            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging("dhadhfabot", "–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")

            bot.send_message(message.chat.id, "–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", reply_markup=markup)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üë® –î–æ–±–∞–≤—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è".
        elif message.text == "üë® –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è":
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging("dhadhfabot", "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É: /addUser *@–∏–º—è_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*")

            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n/addUser *@–∏–º—è_–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è*", parse_mode="Markdown")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üìñ C–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π".
        elif message.text == "üìñ C–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π":
            output_button_users(message)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üìñ C–ø–∏—Å–æ–∫ —Å–ª—É–∂–±".
        elif message.text == "üìñ C–ø–∏—Å–æ–∫ —Å–ª—É–∂–±":
            output_button_service(message)

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üü¢ –î–æ–±–∞–≤–∏—Ç—å —Å–ª—É–∂–±—É".
        elif message.text == "üü¢ –î–æ–±–∞–≤–∏—Ç—å —Å–ª—É–∂–±—É":
            # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ.
            logging("dhadhfabot", "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É: /addService *–∏–º—è_—Å–ª—É–∂–±—ã*")

            bot.send_message(message.chat.id, "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É:\n/addService *–∏–º—è_—Å–ª—É–∂–±—ã*", parse_mode="Markdown")

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ "üîô –ù–∞–∑–∞–¥".
        elif message.text == "üîô –ù–∞–∑–∞–¥":
            send_start_message("after_admin", message.chat.id)


# –ü—Ä–æ—Ü–µ–¥—É—Ä–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
def start_bot():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –æ–ø—Ä–æ—Å–∞ Telegram —Å–µ—Ä–≤–µ—Ä–æ–≤ –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.
    bot.polling(none_stop=True)


if __name__ == "__main__":
    start_bot()

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è. –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞.
status = ""
